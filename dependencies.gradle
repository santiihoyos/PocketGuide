allprojects {
    repositories {
        jcenter()
        google()
    }
}

ext {
    androidxVersion = '1.2.0'
    androidVectorDrawable = '1.1.0'
    materialVersion = '1.2.1'
    cardViewVersion = '1.0.0'

    //3rd Party Libraries
    daggerVersion = '2.30.1' // Apache License 2.0
    butterKnifeVersion = '10.2.3' // Apache License 2.0
    gsonVersion = '2.8.6' //2.7 Apache License 2.0
    retrofitVersion = '2.9.0' // Apache License 2.0
    okHttpVersion = '4.9.0' // Apache License 2.0
    volleyVersion = '1.1.1'
    supportLibraryVersion = '28.0.0'
    retroLambdaVersion = '0.2.3.a2'
    gradleRetroLambdaVersion = '3.7.1'
    buildGradleVersion = '4.1.1'
    firebaseBomVersion = '26.2.0'
    firebaseCrashlyticsGradleVersion = '2.4.1'  //Outside Firebase Bom
    googleServicesVersion = '4.3.4'
    playServicesGcmVersion = '17.0.0'
    playServicesAnalyticsVersion = '17.0.0'
    playServicesTagManagerVersion = '17.0.0'
    constraintLayoutVersion = '2.0.4'
    multidexVersion = '2.0.1'
    swrveVersion = '7.4.0'
    kotlinVersion = '1.4.30'
    protobufVersion = '2.6.1'
    snmp4jVersion = '2.8.6'
    lottieVersion = '3.6.0'
    misticaVersion = '1.2.1'

    //testing
    junitVersion = '4.13.1'
    mockitoVersion = '3.6.28'
    testingRunnerVersion = '1.0.2'
    powerMockVersion = '2.0.7'
    espressoVersion = '3.1.1'
    installreferrerVersion = '2.1'
    testCoreVersion = '1.3.0'
    testRunnerVersion = '1.3.0'
    robolectricVersion = '4.4'
    androidxTesting= '2.1.0'

    //room
    roomVersion = '2.2.6'

    //lint
    lintVersion = '27.1.1'

    dependencies = [
            supportAppcompat        : "androidx.appcompat:appcompat:${androidxVersion}",
            supportDesign           : "com.google.android.material:material:${materialVersion}",
            androidxCardView        : "androidx.cardview:cardview:${cardViewVersion}",
            constraintLayout        : "androidx.constraintlayout:constraintlayout:${constraintLayoutVersion}",
            supportVectorDrawable   : "androidx.vectordrawable:vectordrawable:${androidVectorDrawable}",
            googleAnalytics         : "com.google.android.gms:play-services-analytics:${playServicesAnalyticsVersion}",
            gcm                     : "com.google.android.gms:play-services-gcm:${playServicesGcmVersion}",
            tagManager              : "com.google.android.gms:play-services-tagmanager:${playServicesTagManagerVersion}",
            firebaseAnalytics       : "com.google.firebase:firebase-analytics",
            firebaseMessaging       : "com.google.firebase:firebase-messaging",
            firebaseDynamicLinks    : "com.google.firebase:firebase-dynamic-links",
            firebaseRemoteConfig    : "com.google.firebase:firebase-config",
            firebaseCrashlitics     : "com.google.firebase:firebase-crashlytics",
            volley                  : "com.android.volley:volley:${volleyVersion}",
            daggerCompiler          : "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger                  : "com.google.dagger:dagger:${daggerVersion}",
            butterKnife             : "com.jakewharton:butterknife:${butterKnifeVersion}",
            butterKnifeCompiler     : "com.jakewharton:butterknife-compiler:${butterKnifeVersion}",
            retrofit               : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitConverter      : "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            retrofitAdapter        : "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}",
            okHttpLoggingInterceptor: "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            multidex                : "androidx.multidex:multidex:${multidexVersion}",
            gson                    : "com.google.code.gson:gson:${gsonVersion}",
            swrveFirebase           : "com.swrve.sdk.android:swrve-firebase:${swrveVersion}",
            swrve                   : "com.swrve.sdk.android:swrve:${swrveVersion}",
            lottie                  : "com.airbnb.android:lottie:${lottieVersion}",
            mistica                 : "com.telefonica.mistica:mistica:${misticaVersion}",
            misticaCatalog          : "com.telefonica.mistica:mistica-catalog:${misticaVersion}",
            installreferrer         : "com.android.installreferrer:installreferrer:${installreferrerVersion}",
            roomRuntime             : "androidx.room:room-runtime:${roomVersion}",
            roomCompiler            : "androidx.room:room-compiler:${roomVersion}",
            roomKotlin              : "androidx.room:room-ktx:${roomVersion}",
            protobuf                : "com.google.protobuf:protobuf-java:$protobufVersion",
            snmp4j                  : "org.snmp4j:snmp4j:${snmp4jVersion}",
            roomRx                  : "androidx.room:room-rxjava2:${roomVersion}",
            lintApi                 : "com.android.tools.lint:lint-api:${lintVersion}",
            lintChecks              : "com.android.tools.lint:lint-checks:${lintVersion}",
            kotlinStdlib8           : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    ]

    testDependencies = [junit             : "junit:junit:${junitVersion}",
                        mockito           : "org.mockito:mockito-core:${mockitoVersion}",
                        powerMock         : "org.powermock:powermock:${powerMockVersion}",
                        powerMockito      : "org.powermock:powermock-api-mockito:${powerMockVersion}",
                        powerMockJUnit4   : "org.powermock:powermock-module-junit4:${powerMockVersion}",
                        mockwebServer     : "com.squareup.okhttp3:mockwebserver:${okHttpVersion}",
                        testingRunner     : "com.android.support.test:runner:${testingRunnerVersion}",
                        testingRules      : "com.android.support.test:rules:${testingRunnerVersion}",
                        espresso          : "com.android.support.test.espresso:espresso-core:${espressoVersion}",
                        supportAnnotations: "com.android.support:support-annotations:${supportLibraryVersion}",
                        testCore          : "androidx.test:core:${testCoreVersion}",
                        testRunner        : "androidx.test:runner:${testRunnerVersion}",
                        robolectric       : "org.robolectric:robolectric:${robolectricVersion}",
                        testLint          : "com.android.tools.lint:lint:$lintVersion",
                        lintTests         : "com.android.tools.lint:lint-tests:$lintVersion",
                        androidxTesting   : "androidx.arch.core:core-testing:$androidxTesting"
    ]

    classPath = [
            kotlinGradle        : "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}",
            googleServices      : "com.google.gms:google-services:${googleServicesVersion}",
            buildGradle         : "com.android.tools.build:gradle:${buildGradleVersion}",
            gradleRetroLambda   : "me.tatarka:gradle-retrolambda:${gradleRetroLambdaVersion}",
            retroLambda         : "me.tatarka.retrolambda.projectlombok:lombok.ast:${retroLambdaVersion}",
            firebaseCrashlyticsGradle : "com.google.firebase:firebase-crashlytics-gradle:${firebaseCrashlyticsGradleVersion}"
    ]

}
